#include "CassetteSongData.h"
#include <Arduino.h>

// Include all the song definitions from the original Cassette example
int imperialMelody[] = {
    NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_F4, REST,
    NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_F4, REST,
    NOTE_A4, NOTE_A4, NOTE_A4, NOTE_F4, NOTE_C5,

    NOTE_A4, NOTE_F4, NOTE_C5, NOTE_A4,
    NOTE_E5, NOTE_E5, NOTE_E5, NOTE_F5, NOTE_C5,
    NOTE_A4, NOTE_F4, NOTE_C5, NOTE_A4,

    NOTE_A5, NOTE_A4, NOTE_A4, NOTE_A5, NOTE_GS5, NOTE_G5,
    NOTE_DS5, NOTE_D5, NOTE_DS5, REST, NOTE_A4, NOTE_DS5, NOTE_D5, NOTE_CS5,

    NOTE_C5, NOTE_B4, NOTE_C5, REST, NOTE_F4, NOTE_GS4, NOTE_F4, NOTE_A4,
    NOTE_C5, NOTE_A4, NOTE_C5, NOTE_E5,

    NOTE_A5, NOTE_A4, NOTE_A4, NOTE_A5, NOTE_GS5, NOTE_G5,
    NOTE_DS5, NOTE_D5, NOTE_DS5, REST, NOTE_A4, NOTE_DS5, NOTE_D5, NOTE_CS5,

    NOTE_C5, NOTE_B4, NOTE_C5, REST, NOTE_F4, NOTE_GS4, NOTE_F4, NOTE_A4,
    NOTE_A4, NOTE_F4, NOTE_C5, NOTE_A4};

float imperialDurations[] = {
    0.375, 0.375, 0.0625, 0.0625, 0.0625, 0.0625, 0.125, 0.125,
    0.375, 0.375, 0.0625, 0.0625, 0.0625, 0.0625, 0.125, 0.125,
    0.25, 0.25, 0.25, 0.1875, 0.0625,

    0.25, 0.1875, 0.0625, 0.5,
    0.25, 0.25, 0.25, 0.1875, 0.0625,
    0.25, 0.1875, 0.0625, 0.5,

    0.25, 0.1875, 0.0625, 0.25, 0.1875, 0.0625,
    0.0625, 0.0625, 0.125, 0.125, 0.125, 0.25, 0.1875, 0.0625,

    0.0625, 0.0625, 0.0625, 0.125, 0.125, 0.25, 0.1875, 0.09375,
    0.25, 0.1875, 0.0625, 0.5,

    0.25, 0.1875, 0.0625, 0.25, 0.1875, 0.0625,
    0.0625, 0.0625, 0.125, 0.125, 0.125, 0.25, 0.1875, 0.0625,

    0.0625, 0.0625, 0.0625, 0.125, 0.125, 0.25, 0.1875, 0.09375,
    0.25, 0.1875, 0.0625, 0.5};

const size_t imperialMelodyLength = sizeof(imperialMelody) / sizeof(int);

int marioMelody[] = {
    NOTE_E5, NOTE_E5, REST, NOTE_E5,
    REST, NOTE_C5, NOTE_E5, REST,
    NOTE_G5, REST, REST, REST,
    NOTE_G4, REST, REST, REST,

    NOTE_C5, REST, REST, NOTE_G4,
    REST, REST, NOTE_E4, REST,
    REST, NOTE_A4, REST, NOTE_B4,
    REST, NOTE_AS4, NOTE_A4, REST,

    NOTE_G4, NOTE_E5, NOTE_G5,
    NOTE_A5, REST, NOTE_F5, NOTE_G5,
    REST, NOTE_E5, REST, NOTE_C5,
    NOTE_D5, NOTE_B4, REST, REST,

    NOTE_C5, REST, REST, NOTE_G4,
    REST, REST, NOTE_E4, REST,
    REST, NOTE_A4, REST, NOTE_B4,
    REST, NOTE_AS4, NOTE_A4, REST,

    NOTE_G4, NOTE_E5, NOTE_G5,
    NOTE_A5, REST, NOTE_F5, NOTE_G5,
    REST, NOTE_E5, REST, NOTE_C5,
    NOTE_D5, NOTE_B4, REST, REST};

float marioDurations[] = {
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,

    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,

    0.1111111, 0.1111111, 0.1111111,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,

    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,

    0.1111111, 0.1111111, 0.1111111,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333,
    0.0833333, 0.0833333, 0.0833333, 0.0833333};

const size_t marioMelodyLength = sizeof(marioMelody) / sizeof(int);

int tetrisMelodyLead[] = {
    NOTE_E5, NOTE_B4, NOTE_C5, NOTE_D5, NOTE_C5, NOTE_B4, NOTE_A4, NOTE_A4,
    NOTE_C5, NOTE_E5, NOTE_D5, NOTE_C5, NOTE_B4, NOTE_B4, NOTE_C5, NOTE_D5, NOTE_E5, NOTE_C5, NOTE_A4, NOTE_A4, REST,

    NOTE_D5, NOTE_F5, NOTE_A5, NOTE_G5, NOTE_F5, NOTE_E5, NOTE_C5, NOTE_E5,
    NOTE_D5, NOTE_C5, NOTE_B4, NOTE_B4, NOTE_C5, NOTE_D5, NOTE_E5, NOTE_C5, NOTE_A4, NOTE_A4, REST};

float tetrisDurationsLead[] = {
    0.25, 0.125, 0.125, 0.25, 0.125, 0.125, 0.25, 0.125,
    0.125, 0.25, 0.125, 0.125, 0.25, 0.125, 0.125, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,

    0.375, 0.125, 0.25, 0.125, 0.125, 0.375, 0.125, 0.25,
    0.125, 0.125, 0.25, 0.125, 0.125, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25};

const size_t tetrisMelodyLength = sizeof(tetrisMelodyLead) / sizeof(int);

int pacmanMelody[] = {
    NOTE_B4, NOTE_B5, NOTE_FS5, NOTE_DS5,
    NOTE_B5, NOTE_FS5, NOTE_DS5, NOTE_C5,
    NOTE_C6, NOTE_G6, NOTE_E6, NOTE_C6, NOTE_G6, NOTE_E6,

    NOTE_B4, NOTE_B5, NOTE_FS5, NOTE_DS5, NOTE_B5,
    NOTE_FS5, NOTE_DS5, NOTE_DS5, NOTE_E5, NOTE_F5,
    NOTE_F5, NOTE_FS5, NOTE_G5, NOTE_G5, NOTE_GS5, NOTE_A5, NOTE_B5};

float pacmanDurations[] = {
    0.0625, 0.0625, 0.0625, 0.0625,
    0.03125, 0.0625, 0.125, 0.0625,
    0.0625, 0.0625, 0.0625, 0.03125, 0.0625, 0.125,

    0.0625, 0.0625, 0.0625, 0.0625, 0.03125,
    0.0625, 0.125, 0.03125, 0.03125, 0.03125,
    0.03125, 0.03125, 0.03125, 0.03125, 0.03125, 0.0625, 0.125};

const size_t pacmanMelodyLength = sizeof(pacmanMelody) / sizeof(int);
